"""empty message

Revision ID: b1b82865b2c5
Revises: f46f66e4439f
Create Date: 2025-01-23 18:56:15.358412

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b1b82865b2c5'
down_revision = 'f46f66e4439f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('alt', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('section_id', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('section_id')
    )
    op.create_table('shipping_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('contact', sa.String(length=20), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipping_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['shipping_id'], ['shipping_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_provider',
    sa.Column('service_provider_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('service_provided_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['service_provided_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('service_provider_id')
    )
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('booking_date', sa.Date(), nullable=False),
    sa.Column('booking_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['service_provider.service_provider_id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_cart',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('service_provider_id', sa.Integer(), nullable=False),
    sa.Column('booking_date', sa.Date(), nullable=True),
    sa.Column('booking_time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['service_provider_id'], ['service_provider.service_provider_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Sales')
    op.drop_table('_alembic_tmp_user')
    op.drop_table('service_request')
    with op.batch_alter_table('Dog_sales', schema=None) as batch_op:
        batch_op.alter_column('breed',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('revenue')

    with op.batch_alter_table('pet', schema=None) as batch_op:
        batch_op.alter_column('pet_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('health_records',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(),
               existing_nullable=False)
        batch_op.alter_column('achivement',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('sale_detail', schema=None) as batch_op:
        batch_op.alter_column('sale_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('breed_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(),
               nullable=False)
        batch_op.alter_column('dog_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('service_type',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('certifications',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('id_proof_path',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('qualification_path',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('certification_path',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('certification_path',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('qualification_path',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('id_proof_path',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('certifications',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=150),
               existing_nullable=True)
        batch_op.alter_column('service_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=150),
               existing_nullable=True)

    with op.batch_alter_table('sale_detail', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'Sales', ['sale_id'], ['sale_id'])
        batch_op.create_foreign_key(None, 'pet', ['dog_id'], ['pet_id'])
        batch_op.alter_column('dog_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.Numeric(),
               type_=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('breed_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('sale_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('pet', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('achivement',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.Numeric(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('health_records',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('pet_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('Dog_sales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('revenue', sa.INTEGER(), sa.Computed('"quantity" * "price"', persisted=True), nullable=True))
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('breed',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)

    op.create_table('service_request',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=50), nullable=False),
    sa.Column('service_requested', sa.VARCHAR(length=150), nullable=False),
    sa.Column('id_proof_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('qualification_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('certification_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('experience', sa.TEXT(), nullable=False),
    sa.Column('request_time', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('_alembic_tmp_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('idProof', sa.VARCHAR(length=255), nullable=False),
    sa.Column('qualification', sa.VARCHAR(length=255), nullable=False),
    sa.Column('fullname', sa.VARCHAR(length=150), nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), nullable=False),
    sa.Column('password', sa.VARCHAR(length=150), nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), nullable=False),
    sa.Column('service_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), nullable=True),
    sa.Column('hourly_rate', sa.FLOAT(), nullable=True),
    sa.Column('certifications', sa.VARCHAR(length=255), nullable=True),
    sa.Column('experience', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Sales',
    sa.Column('sale_id', sa.INTEGER(), nullable=True),
    sa.Column('buyer_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('sale_date', sa.DATETIME(), nullable=True),
    sa.Column('sale_price', sa.NUMERIC(), nullable=False),
    sa.Column('payment_method', sa.TEXT(), nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(length=50), nullable=True),
    sa.CheckConstraint('"payment_method" IN (\'Cash On Delivery\', \'Credit Card\', \'Debit Card\')'),
    sa.PrimaryKeyConstraint('sale_id')
    )
    op.drop_table('final_cart')
    op.drop_table('booking')
    op.drop_table('service_provider')
    op.drop_table('orders')
    op.drop_table('shipping_details')
    op.drop_table('services')
    # ### end Alembic commands ###
